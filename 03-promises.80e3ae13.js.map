{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACZC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,kBAChCE,OAAQH,SAASC,cAAc,iBAC/BG,SAAUJ,SAASC,cAAc,oBAiClC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7BC,YAAW,KACYC,KAAKC,SAAW,GAGrCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,MAEjBA,MAtCLT,EAAKC,OAAOe,iBAAiB,UAE7B,SAAkBC,GACjBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOpB,EAAKI,QAAQiB,OAC5BC,EAAOF,OAAOpB,EAAKK,OAAOgB,OAC1BE,EAASH,OAAOpB,EAAKM,SAASe,OAElCG,QAAQC,IAAI,UAAWN,EAAOG,EAAMC,GAEpC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,IAC3BnB,EAAcmB,EAAGP,GAChBQ,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAClBe,QAAQC,IAAI,uBAAqBjB,QAAiBC,OAClDmB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,UAE7DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MACpBe,QAAQC,IAAI,sBAAoBjB,QAAiBC,OACjDmB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBxB,QAAeC,UAE3DU,GAASG,EAEXtB,EAAKI,QAAQiB,MAAQ,GACrBrB,EAAKK,OAAOgB,MAAQ,GACpBrB,EAAKM,SAASe,MAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n\tformEl: document.querySelector('.form'),\n\tdelayEl: document.querySelector('[name=\"delay\"]'),\n\tstepEl: document.querySelector('[name=\"step\"]'),\n\tamountEl: document.querySelector('[name=\"amount\"]'),\n };\n\n\n\nrefs.formEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n\tevent.preventDefault();\n\tlet delay = Number(refs.delayEl.value);\n\tlet step = Number(refs.stepEl.value);\n\tlet amount = Number(refs.amountEl.value);\n\n\tconsole.log(\"delay: \", delay, step, amount);\n\n\tfor (let i = 0; i < amount; i++) {\n\t\tcreatePromise(i, delay)\n\t\t.then(({ position, delay }) => {\n\t\t\tconsole.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t\tNotiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t })\n\t\t .catch(({ position, delay }) => {\n\t\t\tconsole.log(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t\tNotiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t });\n\t\t delay += step;\n\t}\n\trefs.delayEl.value = '';\n\trefs.stepEl.value = '';\n\trefs.amountEl.value = '';\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tconst shouldResolve = Math.random() > 0.3;\n\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve({position, delay})\n\t\t\t } else {\n\t\t\t\treject({position, delay})\n\t\t\t }\n\t\t}, delay);\n  });\n}\n  "],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","console","log","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.80e3ae13.js.map"}