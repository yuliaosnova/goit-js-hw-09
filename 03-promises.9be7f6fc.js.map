{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,kBAChCE,OAAQH,SAASC,cAAc,iBAC/BG,SAAUJ,SAASC,cAAc,oBAkCnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAzCPT,EAAKC,OAAOe,iBAAiB,UAE7B,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOpB,EAAKI,QAAQiB,OAC5BC,EAAOF,OAAOpB,EAAKK,OAAOgB,OAC1BE,EAASH,OAAOpB,EAAKM,SAASe,OAElCG,QAAQC,IAAI,UAAWN,EAAOG,EAAMC,GAEpC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,IAC1BnB,EAAcmB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBe,QAAQC,IAAI,uBAAwCI,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OAC1DqB,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCH,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,UAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBe,QAAQC,IAAI,sBAAuCI,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OACzDqB,EAAAhC,GAASiC,OAAOG,QACd,sBAAqCL,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,UAGjDU,GAASG,EAEXtB,EAAKI,QAAQiB,MAAQ,GACrBrB,EAAKK,OAAOgB,MAAQ,GACpBrB,EAAKM,SAASe,MAAQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('[name=\"delay\"]'),\n  stepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delay = Number(refs.delayEl.value);\n  let step = Number(refs.stepEl.value);\n  let amount = Number(refs.amountEl.value);\n\n  console.log('delay: ', delay, step, amount);\n\n  for (let i = 1; i < amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  refs.delayEl.value = '';\n  refs.stepEl.value = '';\n  refs.amountEl.value = '';\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","console","log","i","then","param","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9be7f6fc.js.map"}